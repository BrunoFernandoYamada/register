buildscript {
	repositories {
		jcenter()
		mavenCentral()
		maven { url 'https://plugins.gradle.org/m2/' }
		}
	dependencies {
		//plugin needed to generate POJO from Avro schema
		classpath "com.commercehub.gradle.plugin:gradle-avro-plugin:0.14.2"
		}
}

plugins {
	id 'org.springframework.boot' version '2.5.3'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
}
//dont forget to add plugin
apply plugin: "com.commercehub.gradle.plugin.avro"



group = 'br.com.byamada'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	jcenter()
	mavenCentral()
	maven { url "https://repo.spring.io/snapshot" }
	maven { url "https://repo.spring.io/milestone" }
	maven { url "https://packages.confluent.io/maven/" }
}

dependencies {
	implementation group: 'org.springframework.boot', name: 'spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
	// https://mvnrepository.com/artifact/io.jsonwebtoken/jjwt
	implementation group: 'io.jsonwebtoken', name: 'jjwt', version: '0.9.1'
	// https://mvnrepository.com/artifact/mysql/mysql-connector-java
	implementation group: 'mysql', name: 'mysql-connector-java', version: '8.0.26'
	implementation group: 'org.springframework.boot', name: 'spring-boot-starter-data-jpa'

	//Mensageria com Kafka e Schema Registry
	implementation group: 'org.apache.avro', name: 'avro', version: '1.10.1'
	implementation group: 'org.apache.kafka', name: 'kafka-clients', version: '2.8.0'
	implementation group: 'io.confluent', name: 'kafka-avro-serializer', version: '5.3.0'

}

//gradle-avro-plugin setting
avro {
	//convert all string type to "java.lang.CharSequence"
	stringType = "CharSequence"
	validateDefaults = true
}

generateAvroJava {
	//point plugin to folder with avro schemas
	source("src/main/resources/avro")
	//point plugin to folder with generated POJOs
	outputDir = file("src/main/java")
}

test {
	useJUnitPlatform()
}
